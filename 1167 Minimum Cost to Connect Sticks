class Solution {
    public int connectSticks(int[] sticks) {
        int n = sticks.length;

        if(n == 0 || n == 1)
            return 0;

        PriorityQueue<Integer> pq = new PriorityQueue<Integer>();
        int result = 0;

        for(int i = 0; i < n; i++)
            pq.add(sticks[i]);
        
        while(pq.size() > 1){
            int i = pq.remove();
            int j = pq.remove();
            result += i+j;
            pq.add(i+j);
        }
        
        return result;
    }
}
/* WORKS But TLE's few cases, it is LinkedList implementation of PQ 
public int connectSticks(int[] sticks) {
        int n = sticks.length;
        if(n == 0 || n == 1){
            return 0;
        }

        List<Integer> list = new LinkedList<Integer>();
        int result = 0;

        for(int i = 0; i < n; i++){
            list.add(sticks[i]);
        }
        
        while(list.size() > 1){
            int i = Collections.min(list);
            list.remove(new Integer(i));
            int j = Collections.min(list);
            list.remove(new Integer(j));  
            
            list.add(i+j);
            result += i+j;
        }

        return result;
    }
 */