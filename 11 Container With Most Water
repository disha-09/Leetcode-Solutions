class Solution {
    public int maxArea(int[] height) {
        int n = height.length;
        int maxArea = Integer.MIN_VALUE;
        int i = 0, j = n -1;
        
        while(i < j){
            int area = (j - i) * (Math.max(height[j], height[i]) - Math.abs(height[j] - height[i]));
            maxArea = Math.max(maxArea, area);
            if(height[i] > height[j]){
                j--;
            }else{
                i++;
            }
        }
        
        return maxArea;
    }
}

/* BRUTE FORCE (TLE)
public int maxArea(int[] height) {
        int n = height.length;
        int maxArea = Integer.MIN_VALUE;

        for(int i = 0; i < n - 1; i++){
            for(int j = i+1; j < n; j++){
                int area = (j - i) * (Math.max(height[j], height[i]) - Math.abs(height[j] - height[i]));
                maxArea = Math.max(maxArea, area);
            }
        }
        return maxArea;
    }
 */