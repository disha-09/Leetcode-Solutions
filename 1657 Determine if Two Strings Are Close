class Solution {
    public boolean closeStrings(String word1, String word2) {
        if(word1.length() != word2.length())
            return false;
        
        Map<Character, Integer> map1 = new LinkedHashMap<>();
        Map<Character, Integer> map2 = new LinkedHashMap<>();

        for(int i = 0; i < word1.length(); i++){
            map1.put(word1.charAt(i), map1.getOrDefault(word1.charAt(i), 0)+1);
            map2.put(word2.charAt(i), map2.getOrDefault(word2.charAt(i), 0)+1);
        }
        
        if(!map1.keySet().equals(map2.keySet()))
            return false;
        
        List<Integer> vset1 = new LinkedList<>(map1.values());
        List<Integer> vset2 = new LinkedList<>(map2.values());
        
        Collections.sort(vset1);
        Collections.sort(vset2);
        
        return vset1.equals(vset2);        
    }
}